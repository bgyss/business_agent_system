name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  nix-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main
      with:
        extra-conf: |
          experimental-features = nix-command flakes
    
    - name: Setup Nix cache
      uses: DeterminateSystems/magic-nix-cache-action@main
    
    - name: Check flake
      run: nix flake check
    
    - name: Build package
      run: nix build
    
    - name: Run checks
      run: nix run .#checks

  uv-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras
    
    - name: Run linting
      run: |
        uv run ruff check .
        uv run black --check .
        uv run isort --check-only .
    
    - name: Run type checking
      run: uv run mypy agents/ models/ simulation/
    
    - name: Run tests
      run: uv run pytest --cov --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
    
    - name: Install dependencies
      run: uv sync
    
    - name: Run safety check
      run: uv run safety check
    
    - name: Run bandit security check
      run: uv run bandit -r agents/ models/ simulation/

  docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [nix-build, uv-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: business-agent-system:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max